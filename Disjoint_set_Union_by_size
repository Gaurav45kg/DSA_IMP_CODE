class DisjointSet {
    
public:
vector<int> Size, parent;
    DisjointSet(int n) {
        Size.resize(n + 1, 1);
        parent.resize(n + 1);
        for (int i = 0; i <= n; i++) {
            parent[i] = i;
        }
    }

    int findUPar(int node) {
        if (node == parent[node])
            return node;
        return parent[node] = findUPar(parent[node]);
    }

    void unionBySize(int u, int v) {
        int ulp_u = findUPar(u);
        int ulp_v = findUPar(v);
        if (ulp_u == ulp_v) return;
        if (Size[ulp_u] < Size[ulp_v]) {
            parent[ulp_u] = ulp_v;
Size[ulp_v]+=Size[ulp_u];
        }
        else {
            parent[ulp_v] = ulp_u;
            Size[ulp_u]+=Size[ulp_v];
        }
    }
};
